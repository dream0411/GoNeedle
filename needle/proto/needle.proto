// Copyright 2010 GoNeedle Authors. All rights reserved.
// Use of this source code is governed by a 
// license that can be found in the LICENSE file.

package proto;

// PeerBound{} is the master message wrapper for messages incoming to a peer.
// Its purpose is to demux into a Pong{} or a Cargo{} message
message PeerBound {
	optional Pong  Pong  = 1;
	optional Cargo Cargo = 2;
}

// Ping{} is sent from peer to server
message Ping {
	required string Id = 1;
	repeated string Dialing = 2;  // List of node IDs the client desires to connect to
}

// Pong{} is sent from server to peer
message Pong {
	// List of mappings for nodes that want to connect to the client, or 
	// nodes that the client wants to connect to
	repeated PunchPoint Punches = 2;
}

// A Mapping associates a node ID with a public IP address
message PunchPoint {
	required string      Id = 1;
	required string      Address = 2;
}

// Cargo{} are messages sent between peers
message Cargo {
	required string      OriginId = 1;

	//enum CargoType {
	//	PAYLOAD   = 1;
	//	OUTOFBAND = 2;
	//}
	//required CargoType   Type = 2;

	//required bytes       Payload = 3;
}
